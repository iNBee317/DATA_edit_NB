tapply(qq$mm,qq$init2,describe)
tapply(qq$mm,qq$init2,describe,na.rm=T)
View(control)
load("~/Google Drive/Experiments/62-03_locognosia/Analysis_NB/R/loc_data.RData")
View(controlmean)
View(control)
tapply(control$mm,list(control$subnum,control$run),mean,NA.RM=T)
x=tapply(control$mm,list(control$subnum,control$run),mean,NA.RM=T)
x
x[1]
x[1:22]
x[1:23]
x[1:48]
x[1:44]
xx=x[1:44]
yy=x
yy
yy=x[1:60]
yy
yy=x[1:666]
yy=x[1:66]
yy
xx
t.test(xx,yy)
9*5/16
fractions(9*5/16)
library(MASS)
fractions(9*5/16)
fractions(16*7/16)
16*7
3.125*3.125
(1/16+12/16+45/16+112/16)-9.965625
12+1+45+112
50/16
50/16^2
(50/16)^2
170/16
-9.765625
170/16
10.625-9.765625
8^3
/4
8^3
512/4
64/24
(32/20)^@
(32/20)^2
64/24-(32/20)^2
2.9^2
9.7-8.41
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/03_25")
optoimport("03_25")
#----Packages Required (No Entry Required)----
library(zoo)
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
#----Packages Required (No Entry Required)----
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/03_25")
optoimport("03_25")
Hz=rep(c(1:500),100)
keepers=data.frame(Hz,keepers)
rm(Hz)
#keepers removes the na columns.
#creates a Hz vector and add it to the data frame for interpolation purposes
Hz=rep(c(1:500),101)
keepers=data.frame(Hz,keepers)
rm(Hz)
#creates a Hz vector and add it to the data frame for interpolation purposes
Hz=rep(c(1:500),102)
keepers=data.frame(Hz,keepers)
rm(Hz)
View(keepers)
#clean, replaces 100000 missing data values with "NA"
clean=keepers
clean[clean==100000]<-"NA"
#interpolate the missing values based on
#Hz for all trials, outputs a data frame called inter
inter=clean
N=length(clean$optotrak.pulse.number)/500
S=1   #the trial to start interpolating for
M=500 #sets the max number of consecutive NA's to interpolate values for
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
##frames. master is complete with columns names.
#keepers removes the na columns.
#----Setup-----
#Enter the participant number... "03_32", etc. Make sure you have set your working directory to the participants folder in the InProgress directory
optoimport("03_25")
optoimport=function(name){
master=read.table(paste(name,".txt",sep=""),header=F,sep="")
newnames=c("optotrak.pulse.number",paste(c("x","y","z","na","naa"),rep(1:12,each=5),sep=""))
names(master)=newnames
master$optotrak.pulse.number=as.factor(master$optotrak.pulse.number)
master<<-master
keeps=c("optotrak.pulse.number",paste(c("x","y","z"),rep(1:12,each=3),sep=""))
keepers<<-master[,keeps,drop=F]
optoLog=read.table(paste(name,"_optoReplant",".txt",sep=""),header=F,sep="")
}
optoimport("03_25")
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/03_25")
optoimport("03_25")
#----Packages Required (No Entry Required)----
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
#----Setup-----
#Enter the participant number... "03_32", etc. Make sure you have set your working directory to the participants folder in the InProgress directory
optoimport("03_25")
paste(name,"_optoReplant",".txt",sep="")
paste(name,"_optoReplant",".txt",sep="")
name=2
paste(name,"_optoReplant",".txt",sep="")
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/03_25")
optoimport=function(name){
master=read.table(paste(name,".txt",sep=""),header=F,sep="")
newnames=c("optotrak.pulse.number",paste(c("x","y","z","na","naa"),rep(1:12,each=5),sep=""))
names(master)=newnames
master$optotrak.pulse.number=as.factor(master$optotrak.pulse.number)
master<<-master
keeps=c("optotrak.pulse.number",paste(c("x","y","z"),rep(1:12,each=3),sep=""))
keepers<<-master[,keeps,drop=F]
optoLog=read.table(paste(name,"_optoReplant",".txt",sep=""),header=F,sep="")
}
#----Packages Required (No Entry Required)----
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
#----Setup-----
#Enter the participant number... "03_32", etc. Make sure you have set your working directory to the participants folder in the InProgress directory
optoimport("03_25")
#----Packages Required (No Entry Required)----
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/03_25")
#Enter the participant number... "03_32", etc. Make sure you have set your working directory to the participants folder in the InProgress directory
optoimport("03_25")
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
optoimport=function(name){
setwd(paste("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/",name,"/",sep="")
master=read.table(paste(name,".txt",sep=""),header=F,sep="")
newnames=c("optotrak.pulse.number",paste(c("x","y","z","na","naa"),rep(1:12,each=5),sep=""))
names(master)=newnames
master$optotrak.pulse.number=as.factor(master$optotrak.pulse.number)
master<<-master
keeps=c("optotrak.pulse.number",paste(c("x","y","z"),rep(1:12,each=3),sep=""))
keepers<<-master[,keeps,drop=F]
optoLog<<-read.table(paste(name,"_optoReplant",".txt",sep=""),header=F,sep="")
}
rm(name)
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
optoimport=function(name){
setwd(paste("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/",name,"/",sep="")
master=read.table(paste(name,".txt",sep=""),header=F,sep="")
newnames=c("optotrak.pulse.number",paste(c("x","y","z","na","naa"),rep(1:12,each=5),sep=""))
names(master)=newnames
master$optotrak.pulse.number=as.factor(master$optotrak.pulse.number)
master<<-master
keeps=c("optotrak.pulse.number",paste(c("x","y","z"),rep(1:12,each=3),sep=""))
keepers<<-master[,keeps,drop=F]
optoLog<<-read.table(paste(name,"_optoReplant",".txt",sep=""),header=F,sep="")
}
##frames. master is complete with columns names.
#keepers removes the na columns.
optoimport=function(name){
#setwd(paste("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/",name,"/",sep="")
master=read.table(paste(name,".txt",sep=""),header=F,sep="")
newnames=c("optotrak.pulse.number",paste(c("x","y","z","na","naa"),rep(1:12,each=5),sep=""))
names(master)=newnames
master$optotrak.pulse.number=as.factor(master$optotrak.pulse.number)
master<<-master
keeps=c("optotrak.pulse.number",paste(c("x","y","z"),rep(1:12,each=3),sep=""))
keepers<<-master[,keeps,drop=F]
optoLog<<-read.table(paste(name,"_optoReplant",".txt",sep=""),header=F,sep="")
}
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
optoimport=function(name){
setwd(paste("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/",name,"/",sep=""))
master=read.table(paste(name,".txt",sep=""),header=F,sep="")
newnames=c("optotrak.pulse.number",paste(c("x","y","z","na","naa"),rep(1:12,each=5),sep=""))
names(master)=newnames
master$optotrak.pulse.number=as.factor(master$optotrak.pulse.number)
master<<-master
keeps=c("optotrak.pulse.number",paste(c("x","y","z"),rep(1:12,each=3),sep=""))
keepers<<-master[,keeps,drop=F]
optoLog<<-read.table(paste(name,"_optoReplant",".txt",sep=""),header=F,sep="")
}
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
#----Setup-----
#Enter the participant number... "03_32", etc. Make sure you have set your working directory to the participants folder in the InProgress directory
optoimport("03_25")
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
#----Setup-----
#Enter the participant number... "03_32", etc. Make sure you have set your working directory to the participants folder in the InProgress directory
optoimport("03_25")
#----Packages Required (No Entry Required)----
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/03_25")
#Enter the participant number... "03_32", etc. Make sure you have set your working directory to the participants folder in the InProgress directory
optoimport("03_25")
Hz=rep(c(1:500),102)
keepers=data.frame(Hz,keepers)
rm(Hz)
#clean, replaces 100000 missing data values with "NA"
clean=keepers
clean[clean==100000]<-"NA"
optoimport("03_25")
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/03_25")
optoimport("03_25")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
optoimport=function(name){
#setwd(paste("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/",name,sep=""))
master=read.table(paste(name,".txt",sep=""),header=F,sep="")
newnames=c("optotrak.pulse.number",paste(c("x","y","z","na","naa"),rep(1:12,each=5),sep=""))
names(master)=newnames
master$optotrak.pulse.number=as.factor(master$optotrak.pulse.number)
master<<-master
keeps=c("optotrak.pulse.number",paste(c("x","y","z"),rep(1:12,each=3),sep=""))
keepers<<-master[,keeps,drop=F]
optoLog=read.table(paste(name,"_optoReplant",".txt",sep=""),header=F,sep="")
optoLog<<-optoLog
}
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
optoimport=function(name){
#setwd(paste("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/",name,sep=""))
master=read.table(paste(name,".txt",sep=""),header=F,sep="")
newnames=c("optotrak.pulse.number",paste(c("x","y","z","na","naa"),rep(1:12,each=5),sep=""))
names(master)=newnames
master$optotrak.pulse.number=as.factor(master$optotrak.pulse.number)
master<<-master
keeps=c("optotrak.pulse.number",paste(c("x","y","z"),rep(1:12,each=3),sep=""))
keepers<<-master[,keeps,drop=F]
optoLog=read.table(paste(name,"_optoReplant",".txt",sep=""),header=F,sep="")
optoLog<<-optoLog
}
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/03_25")
#----Setup-----
#Enter the participant number... "03_32", etc. Make sure you have set your working directory to the participants folder in the InProgress directory
optoimport("03_25")
optoLog=read.table("03_25_optoReplant.txt",header=F,dep="")
optoLog=read.table("03_25_optoReplant.txt",header=F,sep="")
View(optoLog)
length(optolOG)
length(optoLog)
length(optoLog[1])
View(optoLog)
View(optoLog$V1)
length(optoLog$V1)
x=length(optolOG$V1)
x=length(optoLog$V1)
translation=c(rep(0,x))
optoLog=rbind(translation,optoLog)
View(optoLog)
#import presentation output log to determine good trials
optoLog=read.table("03_25_optoReplant.txt",header=F,sep=T)
x=length(optoLog$V1)
translation=c(rep(0,x))
#clean, replaces 100000 missing data values with "NA"
clean=keepers
clean[clean==100000]<-"NA"
#import presentation output log to determine good trials
optoLog=read.table("03_25_optoReplant.txt",header=F,sep="")
x=length(optoLog$V1)
translation=c(rep(0,x))
optoLog=cbind(translation,optoLog)
View(optoLog)
optoLog=cbind(translation,optoLog)
optolog$translation=as.character(optolog$translation)
optoLog$translation=as.character(optoLog$translation)
if(optoLog$V1 = 61){
optoLog$translation = "Move Start"
}
if(optoLog$V1 == 61){
optoLog$translation = "Move Start"
}
optoLog$translation[optoLog$V1 == 61]= "Move Start"
View(optoLog)
optoLog$translation[optoLog$V1 =61]= "Move Start"
for (i in x)
if(optoLog$V1[i] == 61){
optoLog$translation[i] = "Move Start"
}
View(optoLog)
clean=keepers
clean[clean==100000]<-"NA"
#import presentation output log to determine good trials
optoLog=read.table("03_25_optoReplant.txt",header=F,sep="")
x=length(optoLog$V1)
translation=c(rep(0,x))
optoLog=cbind(translation,optoLog)
optoLog$translation=as.character(optoLog$translation)
View(optoLog)
for (i in x)
if(optoLog$V1[i] == 61){
optoLog$translation[i] = "Move Start"
}
View(optoLog)
class(optoLog$V1)
optoLog$V1 = factor(optoLog$V1)
#import presentation output log to determine good trials
optoLog=read.table("03_25_optoReplant.txt",header=F,sep="")
x=length(optoLog$V1)
translation=c(rep(0,x))
optoLog=cbind(translation,optoLog)
optoLog$V1 = factor(optoLog$V1)
optoLog$translation=as.character(optoLog$translation)
for (i in x)
if(optoLog$V1[i] == 61){
optoLog$translation[i] = "Move Start"
}
View(optoLog)
class(optoLog$V1)
for (i in x)
if(optoLog$V1[i] == "61"){
optoLog$translation[i] = "Move Start"
}
View(optoLog)
class(optoLog$translation)
for (i in 1:x)
if(optoLog$V1[i] == "61"){
optoLog$translation[i] = "Move Start"
}
View(optoLog)
#Enter the participant number... "03_32", etc. Make sure you have set your working directory to the participants folder in the InProgress directory
optoimport("03_25")
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scipts")
source("MoCapFunctions.R")
##Reads in .txt file for a subject and creates two data
##frames. master is complete with columns names.
#keepers removes the na columns.
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/InProgress/03_25")
optoimport("03_25")
#creates a Hz vector and add it to the data frame for interpolation purposes
Hz=rep(c(1:500),102)
keepers=data.frame(Hz,keepers)
rm(Hz)
clean=keepers
clean[clean==100000]<-"NA"
#import presentation output log to determine good trials
optoLog=read.table("03_25_optoReplant.txt",header=F,sep="")
x=length(optoLog$V1)
translation=c(rep(0,x))
optoLog=cbind(translation,optoLog)
optoLog$V1 = factor(optoLog$V1)
optoLog$translation=as.character(optoLog$translation)
for (i in 1:x){
if(optoLog$V1[i] == "61"){
optoLog$translation[i] = "Move Start"
}
}
View(optoLog)
codeTranslate=function(y,z,logLength){
for (i in 1:logLength){
if(optoLog$V1[i] == y){
optoLog$translation[i] = z
}}}
y=c(3,4,5,6,10,11,12,13,20)#list of all code values
z=c("LH press","RH press","LH lift", "RH lift", "LH Block Start","RH Block Start","Visible Block","Hidden Block")#interpretation of that value
#y and z should be the same length
length(y)
length(z)
y=c(3,4,5,6,10,11,12,13)#list of all code values
z=c("LH press","RH press","LH lift", "RH lift", "LH Block Start","RH Block Start","Visible Block","Hidden Block")#interpretation of that value
#y and z should be the same length
for (a in 1:length(y)){
codeTranslate(y,z,x)
}
warnings()
codeTranslate=function(y,z,logLength){
for (i in 1:logLength){
if(optoLog$V1[i] == y[a]){
optoLog$translation[i] = z[a]
}}}
#y and z should be the same length
for (a in 1:length(y)){
codeTranslate(y,z,x)
}
View(optoLog)
codeTranslate=function(y,z,logLength){
for (i in 1:logLength){
if(optoLog$V1[i] == y[a]){
optoLog$translation[i] <<- z[a]
}}}
y=c(3,4,5,6,10,11,12,13)#list of all code values
z=c("LH press","RH press","LH lift", "RH lift", "LH Block Start","RH Block Start","Visible Block","Hidden Block")#interpretation of that value
#y and z should be the same length
for (a in 1:length(y)){
codeTranslate(y,z,x)
}
View(optoLog)
y=c(3,4,5,6,10,11,12,13,30,31,32,33,61,62,63)#list of all code values
z=c("LH press","RH press","LH lift", "RH lift", "LH Block Start","RH Block Start","Visible Block","Hidden Block","ERROR: lifted luring loading","ERROR: no lift within 3 seconds after onset","ERROR: wrong hand lifted on move","ERROR: wrong hand lifted during swtimulus present","MOVE: 1cm cube","MOVE: 2cm cube",""MOVE: 4cm cube"")#interpretation of that value
#y
y=c(3,4,5,6,10,11,12,13,30,31,32,33,61,62,63)#list of all code values
z=c("LH press","RH press","LH lift", "RH lift", "LH Block Start","RH Block Start","Visible Block","Hidden Block","ERROR: lifted luring loading","ERROR: no lift within 3 seconds after onset","ERROR: wrong hand lifted on move","ERROR: wrong hand lifted during swtimulus present","MOVE: 1cm cube","MOVE: 2cm cube","MOVE: 4cm cube")#interpretation of that value
#y and z should be the same length
for (a in 1:length(y)){
codeTranslate(y,z,x)
}
View(optoLog)
for (a in 1:length(y)){
codeTranslate(y,z,x)
}
y=c(3,4,5,6,10,11,12,13,30,31,32,33,40,41,50,61,62,63,70,80,90,91,92,93,94)#list of all code values
z=c("LH press","RH press","LH lift", "RH lift", "LH Block Start","RH Block Start","Visible Block","Hidden Block","ERROR: lifted during loading","ERROR: no lift within 3 seconds after onset","ERROR: wrong hand lifted on move","ERROR: wrong hand lifted during swtimulus present","preview epoch", "stimulus (ready) epoch","wait for reach epoch","MOVE: 1cm cube","MOVE: 2cm cube","MOVE: 4cm cube","wait for optotrak to reset","trial finished ok","CONFIRMATION: confirmed","CONFIRMATION: denied","CONFIRMATION: aborted","CONFIRMATION: trial ended before experimenter could respond","CONFIRMATION: auto-accept")#interpretation of that value
#y and z should be the same length
for (a in 1:length(y)){
codeTranslate(y,z,x)
}
View(optoLog)
y=c(3,4,5,6,10,11,12,13,20,21,30,31,32,33,40,41,50,61,62,63,70,80,90,91,92,93,94)#list of all code values
z=c("LH press","RH press","LH lift", "RH lift", "LH Block Start","RH Block Start","Visible Block","Hidden Block","load epoch: (includes signal to close eyes)","load epoch: no-eye close signal","ERROR: lifted during loading","ERROR: no lift within 3 seconds after onset","ERROR: wrong hand lifted on move","ERROR: wrong hand lifted during swtimulus present","preview epoch", "stimulus (ready) epoch","wait for reach epoch","MOVE: 1cm cube","MOVE: 2cm cube","MOVE: 4cm cube","wait for optotrak to reset","trial finished ok","CONFIRMATION: confirmed","CONFIRMATION: denied","CONFIRMATION: aborted","CONFIRMATION: trial ended before experimenter could respond","CONFIRMATION: auto-accept")#interpretation of that value
#y and z should be the same length
for (a in 1:length(y)){
codeTranslate(y,z,x)
}
View(optoLog)
y=c(3,4,5,6,10,11,12,13,20,21,30,31,32,33,40,41,50,61,62,63,70,80,90,91,92,93,94,100)#list of all code values
z=c("LH press","RH press","LH lift", "RH lift", "LH Block Start","RH Block Start","Visible Block","Hidden Block","load epoch: (includes signal to close eyes)","load epoch: no-eye close signal","ERROR: lifted during loading","ERROR: no lift within 3 seconds after onset","ERROR: wrong hand lifted on move","ERROR: wrong hand lifted during swtimulus present","preview epoch", "stimulus (ready) epoch","wait for reach epoch","MOVE: 1cm cube","MOVE: 2cm cube","MOVE: 4cm cube","wait for optotrak to reset","trial finished ok","CONFIRMATION: confirmed","CONFIRMATION: denied","CONFIRMATION: aborted","CONFIRMATION: trial ended before experimenter could respond","CONFIRMATION: auto-accept","BLOCK END")#interpretation of that value
#y and z should be the same length
for (a in 1:length(y)){
codeTranslate(y,z,x)
}
View(optoLog)
optoReport=optoLog[optoLog$V1 == 10]
optoReport=optoLog[optoLog$V1 == 10,]
View(optoReport)
optoReport=optoLog[optoLog$V1 == 10,11,12,13,61,62,63,90,91,92,93,94,100]
optoReport=optoLog[optoLog$V1 == 10||11]
View(optoReport)
View(optoReport)
y=c(3,4,5,6,10,11,12,13,20,21,30,31,32,33,40,41,50,61,62,63,70,80,90,91,92,93,94,100)#list of all code values
z=c("LH press","RH press","LH lift", "RH lift", "LH Block Start","RH Block Start","Visible Block","Hidden Block","load epoch: (includes signal to close eyes)","load epoch: no-eye close signal","ERROR: lifted during loading","ERROR: no lift within 3 seconds after onset","ERROR: wrong hand lifted on move","ERROR: wrong hand lifted during swtimulus present","preview epoch", "stimulus (ready) epoch","wait for reach epoch","MOVE: 1cm cube","MOVE: 2cm cube","MOVE: 4cm cube","wait for optotrak to reset","trial finished ok","CONFIRMATION: confirmed","CONFIRMATION: denied","CONFIRMATION: aborted","CONFIRMATION: trial ended before experimenter could respond","CONFIRMATION: auto-accept","BLOCK END")#interpretation of that value
#y and z should be the same length
for (a in 1:length(y)){
codeTranslate(y,z,x)
}
optoReport=optoLog[optoLog$V1 == 10||11]
optoReport=optoLog[optoLog$V1 == 10]
optoReport=optoLog[optoLog$V1 == 10,]
optoReport=optoLog[optoLog$V1 == 10||11,]
View(optoReport)
optoReport=optoLog[optoLog$V1 == 10||optoLog$V1 == 11,]
View(optoReport)
optoReport=optoLog[optoLog$V1 == 10|optoLog$V1 == 11,]
View(optoReport)
optoReport=optoLog[optoLog$V1 == 10|11,]
optoReport=optoLog[optoLog$V1 == 10|optoLog$V1 == 11|optoLog$V1 == 12|optoLog$V1 == 13|optoLog$V1 == 30|optoLog$V1 == 31|optoLog$V1 == 32|optoLog$V1 == 33|optoLog$V1 == 61|optoLog$V1 == 62|optoLog$V1 == 63|optoLog$V1 == 90|optoLog$V1 == 91|optoLog$V1 == 92|optoLog$V1 == 93|optoLog$V1 == 94|optoLog$V1 == 100|optoLog$V1 == 101,]
View(optoReport)
optoReport=optoLog[optoLog$V1 == 10|optoLog$V1 == 11|optoLog$V1 == 12|optoLog$V1 == 13|optoLog$V1 == 30|optoLog$V1 == 31|optoLog$V1 == 32|optoLog$V1 == 33|optoLog$V1 == 61|optoLog$V1 == 62|optoLog$V1 == 63|optoLog$V1 == 90|optoLog$V1 == 91|optoLog$V1 == 92|optoLog$V1 == 93|optoLog$V1 == 94|optoLog$V1 == 100|optoLog$V1 == 101|optoLog$V1 == c(8000:8030),]
optoReport=optoLog[optoLog$V1 == 10|optoLog$V1 == 11|optoLog$V1 == 12|optoLog$V1 == 13|optoLog$V1 == 30|optoLog$V1 == 31|optoLog$V1 == 32|optoLog$V1 == 33|optoLog$V1 == 61|optoLog$V1 == 62|optoLog$V1 == 63|optoLog$V1 == 90|optoLog$V1 == 91|optoLog$V1 == 92|optoLog$V1 == 93|optoLog$V1 == 94|optoLog$V1 == 100|optoLog$V1 == 101|optoLog$V1 == 80**,]
