ggplot(amp_belb_cont, aes(x=factor(init2),y=mm,fill=ah_uh_control))+theme_bw()+theme(panel.grid.major = element_line(colour = "#808080"))+coord_cartesian(ylim=c(0,70))+   geom_rect(data=NULL,aes(xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf), fill="gray100",alpha=.02)+geom_rect(data=NULL,aes(xmin=1.5,xmax=Inf,ymin=-Inf,ymax=Inf), fill="gray95",alpha=.05)+
geom_boxplot()+ylab("Error\n(mm)")+xlab("Participants")+scale_x_discrete(limits=(levels(amp_belb_cont$init2)))+
theme(panel.grid.major = element_line(colour = "black"),legend.title=element_blank(),legend.text = element_text(angle = 0, size = 14, face = 'bold'),legend.position="top",axis.text.x = element_text(angle = 0, hjust = .5, size=14,color="black",face='bold'),axis.title.x = element_text(size = 14, angle = 00, face='bold'),axis.title.y = element_text(size = 14, angle = 90,face='bold'),axis.text.y = element_text(size = 14, angle = 0,face='bold'),legend.margin = unit(0, "cm"),legend.key.size=unit(1.2,"cm"),legend.text=element_text(size=14))+  scale_y_continuous(breaks=seq(0,70,by=10))+
scale_fill_brewer(palette="Greys")+annotate("text", x = 1, y = 38, label = "",size=6,fontface="bold")+ annotate("text", x = 7, y = 38, label = "Below\nElbow\nAmputees",size=6,fontface="bold")
tapply(amputee$init2,amputee$mm,describe)
tapply(amputee$mm,list(amputee$init2),describe)
tapply(amputee$mm,list(amputee$init2,amputee$ah_uh),describe)
tapply(amputee$mm,list(amputee$ah_uh,amputee$init2),describe)
tapply(amputee$mm,list(amputee$init2),describe)
qq=amputee[amputee$ah_uh=="Unaffected Hand",]
qplot(qq$mm , geom = "blank") +
geom_histogram(aes(y = ..density..), colour = "black", fill = "blue") +
stat_density(geom = "line", colour = "red")+ggtitle("Intact Hand")+
theme(plot.title = element_text(lineheight=.8, face="bold"))
tapply(qq$mm,amputee$init2,describe)
qq=amputee[amputee$ah_uh=="Unaffected Hand",]
qplot(qq$mm , geom = "blank") +
geom_histogram(aes(y = ..density..), colour = "black", fill = "blue") +
stat_density(geom = "line", colour = "red")+ggtitle("Intact Hand")+
theme(plot.title = element_text(lineheight=.8, face="bold"))
tapply(qq$mm,qq$init2,describe)
tapply(qq$mm,qq$init2,describe,na.rm=T)
View(control)
load("~/Google Drive/Experiments/62-03_locognosia/Analysis_NB/R/loc_data.RData")
View(controlmean)
View(control)
tapply(control$mm,list(control$subnum,control$run),mean,NA.RM=T)
x=tapply(control$mm,list(control$subnum,control$run),mean,NA.RM=T)
x
x[1]
x[1:22]
x[1:23]
x[1:48]
x[1:44]
xx=x[1:44]
yy=x
yy
yy=x[1:60]
yy
yy=x[1:666]
yy=x[1:66]
yy
xx
t.test(xx,yy)
9*5/16
fractions(9*5/16)
library(MASS)
fractions(9*5/16)
fractions(16*7/16)
16*7
3.125*3.125
(1/16+12/16+45/16+112/16)-9.965625
12+1+45+112
50/16
50/16^2
(50/16)^2
170/16
-9.765625
170/16
10.625-9.765625
8^3
/4
8^3
512/4
64/24
(32/20)^@
(32/20)^2
64/24-(32/20)^2
2.9^2
9.7-8.41
#----Packages Required (No Entry Required)----
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scripts")
source("MoCapFunctions.R")
##Reads in .txt file for a su
optoimport("03_24")
setwd("~/Documents/DATA_edit_N_B/InProgress/03_24")
optoimport("03_24")
Hz=rep(c(1:500),129)
keepers=data.frame(Hz,keepers)
rm(Hz)
#clean, replaces 100000 missing data values with "NA"
clean=keepers
clean[clean==100000]<-"NA"
#import presentation output log to determine good trials
optoLog=read.table("03_24_optoReplant.txt",header=F,sep="")
x=length(optoLog$V1)
translation=c(rep(0,x))
TimeSec=c(rep(0,x))
TimeAbsolute=c(rep(0,x))
optoLog=cbind(translation,optoLog,TimeSec,TimeAbsolute)
optoLog$V1 = factor(optoLog$V1)
optoLog$translation=as.character(optoLog$translation)
optoLog$TimeSec=optoLog$V2/1000
for (i in 1:x){
if(optoLog$V1[i]==10){
optoLog$translation[i] <- "LH Block Start"}
if(optoLog$V1[i]==11){
optoLog$translation[i] <- "RH Block Start"}
if(optoLog$V1[i]==12){
optoLog$translation[i] <- "Visible Block Start"}
if(optoLog$V1[i]==13){
optoLog$translation[i] <- "Hidden Block Start"}
if(optoLog$V1[i]==30){
optoLog$translation[i] <- "ERROR: lifted during loading/checking"}
if(optoLog$V1[i]==31){
optoLog$translation[i] <- "ERROR: no lift in 3s after stimulus"}
if(optoLog$V1[i]==32){
optoLog$translation[i] <- "ERROR: lifted wrong hand during move"}
if(optoLog$V1[i]==33){
optoLog$translation[i] <- "ERROR: lifted wrong hand during stimulus presentation"}
if(optoLog$V1[i]==61){
optoLog$translation[i] <- "move epoch: 1cm cube"}
if(optoLog$V1[i]==62){
optoLog$translation[i] <- "move epoch: 2cm cube"}
if(optoLog$V1[i]==63){
optoLog$translation[i] <- "move epoch: 3cm cube"}
if(optoLog$V1[i]==80){
optoLog$translation[i] <- "trial finished okay"}
if(optoLog$V1[i]==90){
optoLog$translation[i] <- "experimenter confirmed"}
if(optoLog$V1[i]==91){
optoLog$translation[i] <- "experimenter denied"}
if(optoLog$V1[i]==92){
optoLog$translation[i] <- "experimenter aborted"}
if(optoLog$V1[i]==93){
optoLog$translation[i] <- "auto denial"}
if(optoLog$V1[i]==91){
optoLog$translation[i] <- "experimenter denied"}
if(optoLog$V1[i]==100){
optoLog$translation[i] <- "end of block"}
}
View(optoLog)
x=8:30
length(x)
x=32:70
BlockSize=function(x,y){
zz=x:y
print(length(zz))
}
BlockSize(8,30)
BlockSize(32,71)
BlockSize(72,103)
BlockSize(104,129)
23+40+32+26
View(clean)
levels(clean$optotral.pulse.number)
levels(clean$optotrak.pulse.number)
length(levels(clean$optotrak.pulse.number))
View(optoLog)
25+96
write.csv(clean,file="clean.csv",row.names=F)
View(clean)
BlockSize(6,30)
BlockSize(41,70)
25+40+32+36
25+40+30+26
BlockSize(72,103)
BlockSize(35,71)
25+37+30+26
BlockSize(1,25)
BlockSize(6,30)
BlockSize(32,71)
BlockSize(41,70)
BlockSize(72,103)
BlockSize(71,96)
BlockSize(4,29)
25+40+32+26
25+40+30+26
25+40+30+26
25+37+30+26
setwd("~/Documents/DATA_edit_N_B/InProgress/03_31")
#----Setup-----
#Enter the participant number... "03_32", etc. Make sure you have set your working directory to the participants folder in the InProgress directory
optoimport("03_31")
#----Packages Required (No Entry Required)----
library(zoo)
setwd("/Volumes/Storage/freylab_projects/exp62_transplant/62-02_optotrak/DATA_edit_N_B/Scripts")
source("MoCapFunctions.R")
setwd("~/Documents/DATA_edit_N_B/InProgress/03_31")
optoimport("03_31")
Hz=rep(c(1:500),129)
keepers=data.frame(Hz,keepers)
rm(Hz)
View(master)
levels(master$optotrak.pulse.number)
Hz=rep(c(1:500),99)
keepers=data.frame(Hz,keepers)
rm(Hz)
clean=keepers
clean[clean==100000]<-"NA"
#import presentation output log to determine good trials
optoLog=read.table("03_24_optoReplant.txt",header=F,sep="")
x=length(optoLog$V1)
translation=c(rep(0,x))
TimeSec=c(rep(0,x))
TimeAbsolute=c(rep(0,x))
optoLog=cbind(translation,optoLog,TimeSec,TimeAbsolute)
optoLog$V1 = factor(optoLog$V1)
optoLog$translation=as.character(optoLog$translation)
optoLog$TimeSec=optoLog$V2/1000
#import presentation output log to determine good trials
optoLog=read.table("03_31_optoReplant.txt",header=F,sep="")
x=length(optoLog$V1)
translation=c(rep(0,x))
TimeSec=c(rep(0,x))
TimeAbsolute=c(rep(0,x))
optoLog=cbind(translation,optoLog,TimeSec,TimeAbsolute)
optoLog$V1 = factor(optoLog$V1)
optoLog$translation=as.character(optoLog$translation)
optoLog$TimeSec=optoLog$V2/1000
for (i in 1:x){
if(optoLog$V1[i]==10){
optoLog$translation[i] <- "LH Block Start"}
if(optoLog$V1[i]==11){
optoLog$translation[i] <- "RH Block Start"}
if(optoLog$V1[i]==12){
optoLog$translation[i] <- "Visible Block Start"}
if(optoLog$V1[i]==13){
optoLog$translation[i] <- "Hidden Block Start"}
if(optoLog$V1[i]==30){
optoLog$translation[i] <- "ERROR: lifted during loading/checking"}
if(optoLog$V1[i]==31){
optoLog$translation[i] <- "ERROR: no lift in 3s after stimulus"}
if(optoLog$V1[i]==32){
optoLog$translation[i] <- "ERROR: lifted wrong hand during move"}
if(optoLog$V1[i]==33){
optoLog$translation[i] <- "ERROR: lifted wrong hand during stimulus presentation"}
if(optoLog$V1[i]==61){
optoLog$translation[i] <- "move epoch: 1cm cube"}
if(optoLog$V1[i]==62){
optoLog$translation[i] <- "move epoch: 2cm cube"}
if(optoLog$V1[i]==63){
optoLog$translation[i] <- "move epoch: 3cm cube"}
if(optoLog$V1[i]==80){
optoLog$translation[i] <- "trial finished okay"}
if(optoLog$V1[i]==90){
optoLog$translation[i] <- "experimenter confirmed"}
if(optoLog$V1[i]==91){
optoLog$translation[i] <- "experimenter denied"}
if(optoLog$V1[i]==92){
optoLog$translation[i] <- "experimenter aborted"}
if(optoLog$V1[i]==93){
optoLog$translation[i] <- "auto denial"}
if(optoLog$V1[i]==91){
optoLog$translation[i] <- "experimenter denied"}
if(optoLog$V1[i]==100){
optoLog$translation[i] <- "end of block"}
}
write.csv(optoLog,file="optoLog.csv",row.names=F)
level3=clean
inter=level3
inter=inter[,c(1,2,3,4,5,9,10,11,15,16,17,21,22,23)]
inter$optotrak.pulse.number=factor(inter$optotrak.pulse.number)
levels(inter$optotrak.pulse.number)
length(levels(inter$optotrak.pulse.number))
inter$x1=as.numeric(inter$x1)
inter$x2=as.numeric(inter$x2)
inter$x3=as.numeric(inter$x3)
inter$x4=as.numeric(inter$x4)
inter$x5=as.numeric(inter$x5)
inter$x6=as.numeric(inter$x6)
inter$x7=as.numeric(inter$x7)
inter$x8=as.numeric(inter$x8)
inter$x9=as.numeric(inter$x9)
inter$x10=as.numeric(inter$x10)
inter$x11=as.numeric(inter$x11)
inter$x12=as.numeric(inter$x12)
inter$y1=as.numeric(inter$y1)
inter$y2=as.numeric(inter$y2)
inter$y3=as.numeric(inter$y3)
inter$y4=as.numeric(inter$y4)
inter$y5=as.numeric(inter$y5)
inter$y6=as.numeric(inter$y6)
inter$y7=as.numeric(inter$y7)
inter$y8=as.numeric(inter$y8)
inter$y9=as.numeric(inter$y9)
inter$y10=as.numeric(inter$y10)
inter$y11=as.numeric(inter$y11)
inter$y12=as.numeric(inter$y12)
inter$z1=as.numeric(inter$z1)
inter$z2=as.numeric(inter$z2)
inter$z3=as.numeric(inter$z3)
inter$z4=as.numeric(inter$z4)
inter$z5=as.numeric(inter$z5)
inter$z6=as.numeric(inter$z6)
inter$z7=as.numeric(inter$z7)
inter$z8=as.numeric(inter$z8)
inter$z9=as.numeric(inter$z9)
inter$z10=as.numeric(inter$z10)
inter$z11=as.numeric(inter$z11)
inter$z12=as.numeric(inter$z12)
View(inter)
View(inter)
x=length(inter$optotrak.pulse.number)
condition=c(rep("?",X))
x=length(inter$optotrak.pulse.number)
condition=c(rep("?",x))
x=length(inter$optotrak.pulse.number)
condition=c(rep("?",x))
blocksize=c(rep("?",x))
inter=data.frame(inter,condition,blocksize)
View(inter)
x=length(inter$optotrak.pulse.number)
vision=c(rep("?",x))
hand=c(rep("?",x))
blocksize=c(rep("?",x))
inter=data.frame(inter,cvision,hand,blocksize)
x=length(inter$optotrak.pulse.number)
vision=c(rep("?",x))
hand=c(rep("?",x))
blocksize=c(rep("?",x))
inter=data.frame(inter,vision,hand,blocksize)
inter$vision[1:27]="visible"
inter$vision[1:27]
inter=data.frame(inter,vision,hand,blocksize)
inter$vision=as.factor(inter$vision)
inter$vision[1:27]="visible"
inter=level3
inter$optotrak.pulse.number=factor(inter$optotrak.pulse.number)
inter$x1=as.numeric(inter$x1)
inter$x2=as.numeric(inter$x2)
inter$x3=as.numeric(inter$x3)
inter$x4=as.numeric(inter$x4)
inter$x5=as.numeric(inter$x5)
inter$x6=as.numeric(inter$x6)
inter$x7=as.numeric(inter$x7)
inter$x8=as.numeric(inter$x8)
inter$x9=as.numeric(inter$x9)
inter$x10=as.numeric(inter$x10)
inter$x11=as.numeric(inter$x11)
inter$x12=as.numeric(inter$x12)
inter$y1=as.numeric(inter$y1)
inter$y2=as.numeric(inter$y2)
inter$y3=as.numeric(inter$y3)
inter$y4=as.numeric(inter$y4)
inter$y5=as.numeric(inter$y5)
inter$y6=as.numeric(inter$y6)
inter$y7=as.numeric(inter$y7)
inter$y8=as.numeric(inter$y8)
inter$y9=as.numeric(inter$y9)
inter$y10=as.numeric(inter$y10)
inter$y11=as.numeric(inter$y11)
inter$y12=as.numeric(inter$y12)
inter$z1=as.numeric(inter$z1)
inter$z2=as.numeric(inter$z2)
inter$z3=as.numeric(inter$z3)
inter$z4=as.numeric(inter$z4)
inter$z5=as.numeric(inter$z5)
inter$z6=as.numeric(inter$z6)
inter$z7=as.numeric(inter$z7)
inter$z8=as.numeric(inter$z8)
inter$z9=as.numeric(inter$z9)
inter$z10=as.numeric(inter$z10)
inter$z11=as.numeric(inter$z11)
inter$z12=as.numeric(inter$z12)
x=length(inter$optotrak.pulse.number)
vision=c(rep("?",x))
hand=c(rep("?",x))
blocksize=c(rep("?",x))
inter=data.frame(inter,vision,hand,blocksize)
inter$vision=as.factor(inter$vision)
inter$vision[1:27]="visible"
View(inter)
levels(inter$vision)
levels(inter$vision)=c("?","hello")
levels(inter$vision)
levels(inter$vision)=c("?","visible","not-visible")
inter$vision[1:27]="visible"
levels(inter$vision)=c("?","visible","not-visible")
levels(inter$hand)=c("?","left","right")
levels(inter$blocksize)=c("?","2cm","1cm","3cm")
vision=c(rep("?",x))
hand=c(rep("?",x))
blocksize=c(rep("?",x))
block=c(rep("?",x))
levels(inter$block)=c("?","Block1","Block2","Block3","Block4")
inter$block[1:27]="Block1"
View(inter)
27+24
inter$block[1:27]="Block1"
inter$block[28:51]="Block2"
inter$block[52:75]="Block3"
inter$block[76:99]="Block4"
inter$vision[inter$block=="Block1"]="visible"
levels(inter$vision)=c("?","visible","hidden")
x=length(inter$optotrak.pulse.number)
vision=c(rep("?",x))
hand=c(rep("?",x))
blocksize=c(rep("?",x))
block=c(rep("?",x))
inter=data.frame(inter,vision,hand,blocksize,block)
inter$vision=as.factor(inter$vision)
levels(inter$vision)=c("?","visible","hidden")
levels(inter$hand)=c("?","left","right")
levels(inter$blocksize)=c("?","2cm","1cm","3cm")
levels(inter$block)=c("?","Block1","Block2","Block3","Block4")
inter$block[1:27]="Block1"
inter$block[28:51]="Block2"
inter$block[52:75]="Block3"
inter$block[76:99]="Block4"
inter$vision[inter$block=="Block1"]="visible"
inter$vision[inter$block=="Block2"]="hidden"
inter$vision[inter$block=="Block3"]="hidden"
inter$vision[inter$block=="Block4"]="visible"
inter$hand[inter$block=="Block1"]="left"
inter$hand[inter$block=="Block2"]="left"
inter$hand[inter$block=="Block3"]="right"
inter$hand[inter$block=="Block4"]="right"
View(inter)
View(level3)
inter=level3
inter=inter[,c(1,2,3,4,5,9,10,11,15,16,17,21,22,23)]
inter$optotrak.pulse.number=factor(inter$optotrak.pulse.number)
levels(inter$optotrak.pulse.number)
length(levels(inter$optotrak.pulse.number))
inter$x1=as.numeric(inter$x1)
inter$x2=as.numeric(inter$x2)
inter$x3=as.numeric(inter$x3)
inter$x4=as.numeric(inter$x4)
inter$x5=as.numeric(inter$x5)
inter$x6=as.numeric(inter$x6)
inter$x7=as.numeric(inter$x7)
inter$x8=as.numeric(inter$x8)
inter$x9=as.numeric(inter$x9)
inter$x10=as.numeric(inter$x10)
inter$x11=as.numeric(inter$x11)
inter$x12=as.numeric(inter$x12)
inter$y1=as.numeric(inter$y1)
inter$y2=as.numeric(inter$y2)
inter$y3=as.numeric(inter$y3)
inter$y4=as.numeric(inter$y4)
inter$y5=as.numeric(inter$y5)
inter$y6=as.numeric(inter$y6)
inter$y7=as.numeric(inter$y7)
inter$y8=as.numeric(inter$y8)
inter$y9=as.numeric(inter$y9)
inter$y10=as.numeric(inter$y10)
inter$y11=as.numeric(inter$y11)
inter$y12=as.numeric(inter$y12)
inter$z1=as.numeric(inter$z1)
inter$z2=as.numeric(inter$z2)
inter$z3=as.numeric(inter$z3)
inter$z4=as.numeric(inter$z4)
inter$z5=as.numeric(inter$z5)
inter$z6=as.numeric(inter$z6)
inter$z7=as.numeric(inter$z7)
inter$z8=as.numeric(inter$z8)
inter$z9=as.numeric(inter$z9)
inter$z10=as.numeric(inter$z10)
inter$z11=as.numeric(inter$z11)
inter$z12=as.numeric(inter$z12)
x=length(inter$optotrak.pulse.number)
vision=c(rep("?",x))
hand=c(rep("?",x))
blocksize=c(rep("?",x))
block=c(rep("?",x))
inter=data.frame(inter,vision,hand,blocksize,block)
inter$vision=as.factor(inter$vision)
levels(inter$vision)=c("?","visible","hidden")
levels(inter$hand)=c("?","left","right")
levels(inter$blocksize)=c("?","2cm","1cm","3cm")
levels(inter$block)=c("?","Block1","Block2","Block3","Block4")
inter$block[1:27]="Block1"
inter$block[28:51]="Block2"
inter$block[52:75]="Block3"
inter$block[76:99]="Block4"
inter$vision[inter$block=="Block1"]="visible"
inter$vision[inter$block=="Block2"]="hidden"
inter$vision[inter$block=="Block3"]="hidden"
inter$vision[inter$block=="Block4"]="visible"
inter$hand[inter$block=="Block1"]="left"
inter$hand[inter$block=="Block2"]="left"
inter$hand[inter$block=="Block3"]="right"
inter$hand[inter$block=="Block4"]="right"
View(inter)
plot(inter$x.1[inter$vision=="visible"])
View(inter)
plot(inter$x.1[inter$optotrak.pulse.number=5])
plot(inter$x.1[inter$optotrak.pulse.number==5])
View(inter)
plot(inter$x1[inter$optotrak.pulse.number==5])
plot(inter$x1[inter$optotrak.pulse.number==6])
plot(inter$x1[inter$optotrak.pulse.number==7])
plot(inter$x1[inter$optotrak.pulse.number==8])
View(inter)
write.csv(inter,file="inter.csv",row.names=F)
N=99 #where to iter to
S=1  #the trial to start interpolating for
M=500 #sets the max number of consecutive NA's to interpolate values for
for (i in S:N){
inter$x1[inter$optotrak.pulse.number==i] <- na.approx(inter$x1[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
inter$y1[inter$optotrak.pulse.number==i] <- na.approx(inter$y1[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
inter$z1[inter$optotrak.pulse.number==i] <- na.approx(inter$z1[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
}
for (i in S:N){
inter$x3[inter$optotrak.pulse.number==i] <- na.approx(inter$x3[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
inter$y3[inter$optotrak.pulse.number==i] <- na.approx(inter$y3[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
inter$z3[inter$optotrak.pulse.number==i] <- na.approx(inter$z3[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
}
for (i in S:N){
inter$x5[inter$optotrak.pulse.number==i] <- na.approx(inter$x5[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
inter$y5[inter$optotrak.pulse.number==i] <- na.approx(inter$y5[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
inter$z5[inter$optotrak.pulse.number==i] <- na.approx(inter$z5[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
}
for (i in S:N){
inter$x7[inter$optotrak.pulse.number==i] <- na.approx(inter$x7[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
inter$y7[inter$optotrak.pulse.number==i] <- na.approx(inter$y7[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
inter$z7[inter$optotrak.pulse.number==i] <- na.approx(inter$z7[inter$optotrak.pulse.number==i], inter$Hz[inter$optotrak.pulse.number==i], na.rm = TRUE,maxgap=M)
}
View(inter)
distance1=c(rep("?",x))
